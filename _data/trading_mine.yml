trading_mine: "A trading mine is a hierarchy that contains definitions of trading bots and their plotters. These definitions make up the actual programs of such bots&mdash;the source code."

trading_bot: "A trading bot is a computer program that&mdash;based on datasets exposed as products by other bots (counting sensors, indicators and even other trading bots)&mdash;applies the trading logic defined on a trading system to, on one side, generate a complete trading simulation (outputting datasets that include trades, the action of strategies, validation of conditions, etc.), and on the other side, manage the execution of orders when on a forward testing or live trading session."

process_definition: "The process definition node groups all definitions required for a process to function. The Multi-Period-Market Process deals with time frames of one hour and above. The Multi-Period-Daily Process deals with time frames of 45 minutes and below."

process_output: "The process output groups the definitions of which datasets are impacted by the process, that is, which datasets the process builds or takes a part in building."

output_dataset: "The output dataset is a reference to a dataset definition. By establishing such reference, the process acquires the definitions as of how the dataset is to be constructed."

output_dataset_folder: "An output dataset folder is an organizational device used to create arrangements of output datasets, particularly useful when the bot has many products."

process_dependencies: "Process dependencies are references to various data structures on which the process depends to function."

status_dependency: "Status dependencies are references to a status report that define which process the process establishing the reference depends on."

data_dependency: "Data dependencies are references established with dataset definitions of other bots, determining which datasets the process establishing the reference uses as input."

data_mine_data_dependencies: "Data mine data dependencies are references established with entire data mines to facilitate establishing data dependencies with multiple datasets in the given data mine."

bot_data_dependencies: "A bot data dependencies node is an organizational device used to arrange data dependencies corresponding to a specific bot."

data_dependency_folder: "A data dependency folder node is an organizational device used to map the arrangement of product definition folders of a given bot."

status_report: "Status reports serve as temporal annotations that bots read every time they run to know what was done in the previous cycle and what the state of affairs is at present. Status reports are dynamic, and they change constantly, with updates after every cycle of the associated process."

execution_started_event: "The execution started event is the event that triggers the execution of a process. It usually references the execution finished event of another process on which the process depends on."

execution_finished_event: "The execution finished event is the event that processes trigger once they have finished an execution cycle. The event is broadcasted to whoever wants to listen, so that other bots may know when the process has finished its execution cycle."

product_definition_folder: "A product definition folder is an organizational device used to create arrangements of product definitions, particularly useful when the bot has many products."

product_definition: "The product definition node holds all definitions that make up a product, including how the product is calculated and the datasets the product is comprised of."

dataset_definition: "A dataset definition contains a configuration file that defines many aspects of the dataset. There are two types of dataset definitions: Multi-Period-Market and Multi-Period-Daily."

record_definition: "The record definition is where indicators define how many properties, what properties and in which order those properties will be made available in each record."

record_property: "A record property is a piece of information that may be stored as part of the dataset or made available as a calculated property."

formula: "In the context of a record definition, formulas are used to assign a value to the property, usually in the form of a variable declared in the calculation or data building procedures."

calculations_procedure: "The calculations procedure processes information to be fed to calculated properties. Calculated properties are not stored in the data set; instead, they are calculated in real-time as the data is consumed by others."

procedure_loop: "The procedure loop holds the JavaScript code that reads an input, processes the information, and generates an output recursively."

javascript_code: "The JavaScript code node may hold any snippet of valid JavaScript."

procedure_initialization: "The procedure initialization is used to initialize variables used by the procedure loop."

data_building_procedure: "The data building procedure processes information to be fed to properties that are stored in the output dataset."

plotter: "A plotter is a device used to produce a graphic representation of datasets generated by bots."

plotter_module: "A plotter module is a device within a plotter that contains the definitions to create the visualization for a product definition."

plotter_panel: "A plotter panel usually shows numerical representations of data over the charts on a small window or panel. The plotter panel node features definitions to make that possible."

panel_data: "A panel data node represents a data field to be plotted on the plotter panel."

data_formula: "A data formula is a device used to assign a value to the panel data, usually in the form of the name of the corresponding record property."

shapes: "The shapes node contains definitions of polygons and styles to be rendered on a per-period basis over the charts."

chart_points: "A chart points groups definitions of coordinate points used to define polygons."

point: "A point is a definition of an [x,y] coordinate. The value [x] usually represents a datetime. The value [y] may refer to a price or some other concept."

point_formula: "A point formula is a node used to input the [x,y] coordinates of a point."

polygon: "A polygon features definitions that makeup shapes and their styles."

polygon_condition: "A polygon condition is a rule that allows establishing when a polygon shall be rendered and when not."

polygon_vertex: "A polygon vertex is a reference to a point defined in the chart points, constituting a specific coordinate to be used as a vertex of a shape."

polygon_border: "A polygon border is a shape defined by at least two vertices used to draw lines or to apply a style to the stroke of a closed shape."

style: "A style is a definition of color and opacity in case of a polygon body, and color, opacity and line thickness in case of polygon borders."

style_condition: "A style condition is a rule that allows applying an alternative style in cases where the rule validates true."

polygon_body: "A polygon body is the fill of a shape made out of at least three vertices."

image: "The image node allows overlaying an image over the charts, controlling its position, size, and when it shall be rendered."

image_condition: "An image condition is a rule that allows establishing when an image shall be rendered and when not."

image_position: "The image position node is a reference to a point defined in the chart points, and serves to determine the position in which the image shall be placed."

text: "The text node allows overlaying text on the charts, controlling its position, size, appearance, and when it shall be rendered."

text_condition: "A text condition is a rule that allows establishing when text shall be rendered and when not."

text_position: "The text position node is a reference to a point defined in the chart points, and serves to determine the position in which text shall be rendered."

text_formula: "The text formula determines the content that shall be rendered over the charts."

text_style: "The text style is a definition of color, opacity, and font size that determines the appearance of the text to be rendered over the charts."
